{
    "id": 1,
    "name": "Hibernate Quiz 4",
    "description": "Hibernate Quiz 4",
    "questions": [
        {
            "id": 1010,
            "name": "Which of the following is true about HQL?",
			"explanation": "Hibernate supports named parameters in its HQL queries. HQL supports a range of aggregate methods, similar to SQL",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1055,
                    "questionId": 1010,
                    "name": "Hibernate supports named parameters in its HQL queries ",
                    "isAnswer": false
                },
                {
                    "id": 1056,
                    "questionId": 1010,
                    "name": " HQL supports a range of aggregate methods, similar to SQL",
                    "isAnswer": false
                },
                {
                    "id": 1057,
                    "questionId": 1010,
                    "name": " Both of the above",
                    "isAnswer":true
                },
                {
                    "id": 1058,
                    "questionId": 1010,
                    "name": " None of the above ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1011,
            "name": " Which of the following element is used to represent many-to-one relationship in hibernate?",
			"explanation": "<many-to-one> element is used to define many-to-one association",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1059,
                    "questionId": 1010,
                    "name": "  <many-to-one> ",
                    "isAnswer": true
                },
                {
                    "id": 1060,
                    "questionId": 1010,
                    "name": " <many-one>  ",
                    "isAnswer": false
                },
                {
                    "id": 1061,
                    "questionId": 1010,
                    "name": " <ManyToOne> ",
                    "isAnswer": false
                },
                {
                    "id": 1062,
                    "questionId": 1010,
                    "name": " None of the above",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1012,
            "name": " Which of the following is true about <generator> element?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1063,
                    "questionId": 1010,
                    "name": "The <generator> element within the id element is used to automatically generate the primary key values",
                    "isAnswer": false
                },
                {
                    "id": 1064,
                    "questionId": 1010,
                    "name": "Set the class attribute of the generator element is set to native to let hibernate pick up either identity, sequence or hilo algorithm to create primary key depending upon the capabilities of the underlying database",
                    "isAnswer": false
                },
                {
                    "id": 1065,
                    "questionId": 1010,
                    "name": " Both of the above",
                    "isAnswer": true
                },
                {
                    "id": 1066,
                    "questionId": 1010,
                    "name": "None of the above",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
		{
			"id": 1013,
            "name": " Which method is used to update the state of the given instance from the underlying database?",
			"explanation": "Session.update updates the state of the given instance from the underlying database",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1067,
                    "questionId": 1010,
                    "name": "Session.store() ",
                    "isAnswer": false
                },
                {
                    "id": 1068,
                    "questionId": 1010,
                    "name": "Session.keep()",
                    "isAnswer": false
                },
                {
                    "id": 1069,
                    "questionId": 1010,
                    "name": "Session.update()",
                    "isAnswer": true
                },
                {
                    "id": 1070,
                    "questionId": 1010,
                    "name": "Session.load() ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1014,
            "name": "When a Read-write concurrency strategy is to be used?",
			"explanation": "Use Read-write strategy for read-mostly data where it is critical to prevent stale data in concurrent transactions",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1071,
                    "questionId": 1010,
                    "name": "Use it for reference data only",
                    "isAnswer": false
                },
                {
                    "id": 1072,
                    "questionId": 1010,
                    "name": "Use this strategy for read-mostly data where it is critical to prevent stale data in concurrent transactions.",
                    "isAnswer": true
                },
                {
                    "id": 1073,
                    "questionId": 1010,
                    "name": "Use this strategy if data hardly ever changes and a small likelihood of stale data is not of critical concern.",
                    "isAnswer": false
                },
                {
                    "id": 1074,
                    "questionId": 1010,
                    "name": "None of the above ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1015,
            "name": "  Which of the following is true about @Table annotation?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1075,
                    "questionId": 1010,
                    "name": " The @Table annotation allows to specify the details of the table that will be used to persist the entity in the database. ",
                    "isAnswer": false
                },
                {
                    "id": 1076,
                    "questionId": 1010,
                    "name": "The @Table annotation allows to override the name of the table, its catalogue, and its schema, and enforce unique constraints on columns in the table.",
                    "isAnswer": false
                },
                {
                    "id": 1077,
                    "questionId": 1010,
                    "name": "Both of the above",
                    "isAnswer": true
                },
                {
                    "id": 1078,
                    "questionId": 1010,
                    "name": " None of the above",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1016,
            "name": "What is second level cache in hibernate?",
			"explanation": "The second-level cache is the SessionFactory based cache and is mainly responsible for caching objects across sessions",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1079,
                    "questionId": 1010,
                    "name": "The second-level cache is the SessionFactory based cache and is mainly responsible for caching objects across sessions",
                    "isAnswer": true
                },
                {
                    "id": 1080,
                    "questionId": 1010,
                    "name": "The second-level cache is the Session based cache",
                    "isAnswer": false
                },
                {
                    "id": 1081,
                    "questionId": 1010,
                    "name": "Both of the above",
                    "isAnswer": false
                },
                {
                    "id": 1082,
                    "questionId": 1010,
                    "name": "None of the above",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1017,
            "name": " Which of the following is true about configuration component of Hibernate?",
			"explanation": "no explanation ",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1083,
                    "questionId": 1010,
                    "name": "The Configuration object is the first Hibernate object you create in any Hibernate application",
                    "isAnswer": false
                },
                {
                    "id": 1084,
                    "questionId": 1010,
                    "name": "The Configuration object is usually created only once during application initialization ",
                    "isAnswer": false
                },
                {
                    "id": 1085,
                    "questionId": 1010,
                    "name": "The Configuration object represents a configuration or properties file required by the Hibernate",
                    "isAnswer": false
                },
                {
                    "id": 1086,
                    "questionId": 1010,
                    "name": "All of the above",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1018,
            "name": "  Which of the following elements is used to define specific mappings from a Java classes to the database tables?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1087,
                    "questionId": 1010,
                    "name": "property",
                    "isAnswer": false
                },
                {
                    "id": 1088,
                    "questionId": 1010,
                    "name": "hibernate-config",
                    "isAnswer": false
                },
                {
                    "id": 1089,
                    "questionId": 1010,
                    "name": "class",
                    "isAnswer": true
                },
                {
                    "id": 1090,
                    "questionId": 1010,
                    "name": "class-config ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1019,
            "name": " Which of the following element maps java.util.List property ",
			"explanation": "java.util.List property is mapped with a <list> element and initialized with java.util.ArrayList",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1091,
                    "questionId": 1010,
                    "name": " <set>",
                    "isAnswer": false
                },
                {
                    "id": 1092,
                    "questionId": 1010,
                    "name": "<list>  ",
                    "isAnswer": true
                },
                {
                    "id": 1093,
                    "questionId": 1010,
                    "name": " <bag>",
                    "isAnswer": false
                },
                {
                    "id": 1094,
                    "questionId": 1010,
                    "name": "<map> ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		}
    ]
}