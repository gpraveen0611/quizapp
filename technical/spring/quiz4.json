{
    "id": 1,
    "name": "Spring Quiz 4",
    "description": "Spring Quiz 4",
    "questions": [
        {
            "id": 1010,
            "name": "What is true about @Autowired annotation?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1055,
                    "questionId": 1010,
                    "name": " The @Autowired annotation can be used to autowire bean on the setter method ",
                    "isAnswer": false
                },
                {
                    "id": 1056,
                    "questionId": 1010,
                    "name": "This annotation provides more fine-grained control over where and how autowiring should be accomplished",
                    "isAnswer": true
                },
                {
                    "id": 1057,
                    "questionId": 1010,
                    "name": "The @Autowired annotation can be used to autowire bean on the methods with arbitrary names and/or multiple arguments",
                    "isAnswer":false
                },
                {
                    "id": 1058,
                    "questionId": 1010,
                    "name": " All of above ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1011,
            "name": " What is Target object?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1059,
                    "questionId": 1010,
                    "name": "  A represents a object in your application where you can plug-in AOP aspect ",
                    "isAnswer": false
                },
                {
                    "id": 1060,
                    "questionId": 1010,
                    "name": " The object being advised by one or more aspects, this object will always be a proxy object, also referred to as the advised object  ",
                    "isAnswer": true
                },
                {
                    "id": 1061,
                    "questionId": 1010,
                    "name": " This is used to inject values in objects ",
                    "isAnswer": false
                },
                {
                    "id": 1062,
                    "questionId": 1010,
                    "name": " This is not invoked during program execution by Spring AOP framework",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1012,
            "name": "Which of the following database is not supported using jdbcTemplate?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1063,
                    "questionId": 1010,
                    "name": "MySql",
                    "isAnswer": false
                },
                {
                    "id": 1064,
                    "questionId": 1010,
                    "name": "PostgresSql",
                    "isAnswer": false
                },
                {
                    "id": 1065,
                    "questionId": 1010,
                    "name": " NoSql",
                    "isAnswer": true
                },
                {
                    "id": 1066,
                    "questionId": 1010,
                    "name": "Oracle",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
		{
			"id": 1013,
            "name": " How after advice works?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1067,
                    "questionId": 1010,
                    "name": "Run advice after a method execution regardless of its outcome",
                    "isAnswer": true
                },
                {
                    "id": 1068,
                    "questionId": 1010,
                    "name": " Run advice after a class loads",
                    "isAnswer": false
                },
                {
                    "id": 1069,
                    "questionId": 1010,
                    "name": "Run advice after http response is returned",
                    "isAnswer": false
                },
                {
                    "id": 1070,
                    "questionId": 1010,
                    "name": "Run advice after http request is processed ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1014,
            "name": "Where do you define DispatcherServlet?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1071,
                    "questionId": 1010,
                    "name": "In Beans configuration file",
                    "isAnswer": false
                },
                {
                    "id": 1072,
                    "questionId": 1010,
                    "name": "Web.xml file",
                    "isAnswer": true
                },
                {
                    "id": 1073,
                    "questionId": 1010,
                    "name": " Meta-inf/dispatcher.xml",
                    "isAnswer": false
                },
                {
                    "id": 1074,
                    "questionId": 1010,
                    "name": "Web-inf/ dispatcher.xml ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1015,
            "name": "  What BeanPostProcessor does?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1075,
                    "questionId": 1010,
                    "name": "It processes beans once a bean is initialized ",
                    "isAnswer": false
                },
                {
                    "id": 1076,
                    "questionId": 1010,
                    "name": "It defines callback methods that you can implement to provide your own instantiation logic, dependency-resolution logic etc",
                    "isAnswer": true
                },
                {
                    "id": 1077,
                    "questionId": 1010,
                    "name": " It processes beans once a bean is loaded",
                    "isAnswer": false
                },
                {
                    "id": 1078,
                    "questionId": 1010,
                    "name": "It processes beans once a bean exits",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1016,
            "name": "Which are the modules of core container?",
			"explanation": "Beans, Core, Context, SpEL are the modules in core container",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1079,
                    "questionId": 1010,
                    "name": "Beans, Core, Context, SpEL",
                    "isAnswer": true
                },
                {
                    "id": 1080,
                    "questionId": 1010,
                    "name": "Core, Context, ORM, Web",
                    "isAnswer": false
                },
                {
                    "id": 1081,
                    "questionId": 1010,
                    "name": "Core, Context, Aspects, Test",
                    "isAnswer": false
                },
                {
                    "id": 1082,
                    "questionId": 1010,
                    "name": "Bean, Core, Context, Test   ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1017,
            "name": " Which of the following class can be used to execute Sql queries in spring?",
			"explanation": "JdbcTemplate class can be used to execute Sql queries in spring ",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1083,
                    "questionId": 1010,
                    "name": " JDBCHelper",
                    "isAnswer": false
                },
                {
                    "id": 1084,
                    "questionId": 1010,
                    "name": "JdbcTemplate ",
                    "isAnswer": true
                },
                {
                    "id": 1085,
                    "questionId": 1010,
                    "name": " DBHelper",
                    "isAnswer": false
                },
                {
                    "id": 1086,
                    "questionId": 1010,
                    "name": "DBTemplate",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1018,
            "name": " Which of the statement is correct?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1087,
                    "questionId": 1010,
                    "name": "The AOP module provides aspect-oriented programming implementation allowing you to define method-interceptors and pointcuts to cleanly decouple code that implements functionality that should be separated",
                    "isAnswer": false
                },
                {
                    "id": 1088,
                    "questionId": 1010,
                    "name": "The Aspects module provides integration with AspectJ - Which is again a powerful and mature aspect oriented programming (AOP) framework",
                    "isAnswer": false
                },
                {
                    "id": 1089,
                    "questionId": 1010,
                    "name": "The Instrumentation module provides class instrumentation support and class loader implementations to be used in certain application servers",
                    "isAnswer": false
                },
                {
                    "id": 1090,
                    "questionId": 1010,
                    "name": "All of the above ",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1019,
            "name": " What is true about <map> collection configuration elements? ",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1091,
                    "questionId": 1010,
                    "name": "This helps in wiring a list of values, allowing duplicates ",
                    "isAnswer": false
                },
                {
                    "id": 1092,
                    "questionId": 1010,
                    "name": "This helps in wiring a list of values but without any duplicates  ",
                    "isAnswer": false
                },
                {
                    "id": 1093,
                    "questionId": 1010,
                    "name": "This can be used to inject a collection of name-value pairs where name and value can be of any type",
                    "isAnswer": true
                },
                {
                    "id": 1094,
                    "questionId": 1010,
                    "name": "This tag is not supported ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		}
    ]
}