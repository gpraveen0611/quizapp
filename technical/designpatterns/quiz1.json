{
    "id": 1,
    "name": "Design Patterns Quiz 1",
    "description": "Design Patterns Quiz 1",
    "questions": [
        {
            "id": 1010,
            "name": "Attach additional responsibilities to an object dynamically. It provides a flexible alternative to subclassing for extending functionality.",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1055,
                    "questionId": 1010,
                    "name": "Chain of responsibility ",
                    "isAnswer": false
                },
                {
                    "id": 1056,
                    "questionId": 1010,
                    "name": " Adapter",
                    "isAnswer": false
                },
                {
                    "id": 1057,
                    "questionId": 1010,
                    "name": " Decorator",
                    "isAnswer":true
                },
                {
                    "id": 1058,
                    "questionId": 1010,
                    "name": " Composite ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1011,
            "name": " Which of the following represents The (static) structure and (dynamic) behavior of the pattern?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1059,
                    "questionId": 1010,
                    "name": " Name ",
                    "isAnswer": false
                },
                {
                    "id": 1060,
                    "questionId": 1010,
                    "name": " Application  ",
                    "isAnswer": false
                },
                {
                    "id": 1061,
                    "questionId": 1010,
                    "name": " Consequences ",
                    "isAnswer": false
                },
                {
                    "id": 1062,
                    "questionId": 1010,
                    "name": " Form",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1012,
            "name": " Which of the following Chooses and standardizes patterns for a problem domain promotes software reuse and hence, quality and productivity?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1063,
                    "questionId": 1010,
                    "name": "Promoting Communication",
                    "isAnswer": false
                },
                {
                    "id": 1064,
                    "questionId": 1010,
                    "name": "Streamlining Documentation",
                    "isAnswer": false
                },
                {
                    "id": 1065,
                    "questionId": 1010,
                    "name": " Increasing Development Efficiency",
                    "isAnswer": false
                },
                {
                    "id": 1066,
                    "questionId": 1010,
                    "name": "Supporting Software Reuse",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
		{
			"id": 1013,
            "name": " Define one to many dependency between objects so that when one object change state, all its dependent are notified and updated automatically.",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1067,
                    "questionId": 1010,
                    "name": "Chain of responsibility",
                    "isAnswer": false
                },
                {
                    "id": 1068,
                    "questionId": 1010,
                    "name": "Event Notification",
                    "isAnswer": false
                },
                {
                    "id": 1069,
                    "questionId": 1010,
                    "name": "Mediator",
                    "isAnswer": false
                },
                {
                    "id": 1070,
                    "questionId": 1010,
                    "name": "Observer ",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1014,
            "name": "Which of the following is not one of the elements of a design pattern?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1071,
                    "questionId": 1010,
                    "name": "context",
                    "isAnswer": false
                },
                {
                    "id": 1072,
                    "questionId": 1010,
                    "name": " environment",
                    "isAnswer": false
                },
                {
                    "id": 1073,
                    "questionId": 1010,
                    "name": "problem",
                    "isAnswer": false
                },
                {
                    "id": 1074,
                    "questionId": 1010,
                    "name": "solution ",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1015,
            "name": "   Define an interface for creating an object, but let the subclasses decide which class to instantiate. It let the instantiation differ to subclasses.",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1075,
                    "questionId": 1010,
                    "name": " Factory Method ",
                    "isAnswer": true
                },
                {
                    "id": 1076,
                    "questionId": 1010,
                    "name": " Abstract Factory",
                    "isAnswer": false
                },
                {
                    "id": 1077,
                    "questionId": 1010,
                    "name": " Builder",
                    "isAnswer": false
                },
                {
                    "id": 1078,
                    "questionId": 1010,
                    "name": "Prototype",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1016,
            "name": " Define a family of algorithms, encapsulate each one, and make them interchangeable. It lets the algorithm vary independently from clients that use it.",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1079,
                    "questionId": 1010,
                    "name": "Template method",
                    "isAnswer": false
                },
                {
                    "id": 1080,
                    "questionId": 1010,
                    "name": "Decorator",
                    "isAnswer": false
                },
                {
                    "id": 1081,
                    "questionId": 1010,
                    "name": "Strategy",
                    "isAnswer": true
                },
                {
                    "id": 1082,
                    "questionId": 1010,
                    "name": "Visitor",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1017,
            "name": " Encapsulate a request as an object, there by letting you parametrize clients with different requests, queue or log requests, and support undoable operation.",
			"explanation": "no explanation ",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1083,
                    "questionId": 1010,
                    "name": " Adapter",
                    "isAnswer": false
                },
                {
                    "id": 1084,
                    "questionId": 1010,
                    "name": " Command ",
                    "isAnswer": true
                },
                {
                    "id": 1085,
                    "questionId": 1010,
                    "name": "Decorator",
                    "isAnswer": false
                },
                {
                    "id": 1086,
                    "questionId": 1010,
                    "name": "Composite",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1018,
            "name": "  Which of these are the part of 253 patterns in pattern book by Alexander?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1087,
                    "questionId": 1010,
                    "name": "Four-Story Limit",
                    "isAnswer": false
                },
                {
                    "id": 1088,
                    "questionId": 1010,
                    "name": "South-Facing Outdoors",
                    "isAnswer": false
                },
                {
                    "id": 1089,
                    "questionId": 1010,
                    "name": "Warm Colors",
                    "isAnswer": false
                },
                {
                    "id": 1090,
                    "questionId": 1010,
                    "name": "All of the mentioned ",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1019,
            "name": " Which of the following describes the Facade pattern correctly?",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1091,
                    "questionId": 1010,
                    "name": "This pattern allows a user to add new functionality to an existing object without altering its structure ",
                    "isAnswer": false
                },
                {
                    "id": 1092,
                    "questionId": 1010,
                    "name": "This pattern is used where we need to treat a group of objects in similar way as a single object  ",
                    "isAnswer": false
                },
                {
                    "id": 1093,
                    "questionId": 1010,
                    "name": "This pattern hides the complexities of the system and provides an interface to the client using which the client can access the system",
                    "isAnswer": true
                },
                {
                    "id": 1094,
                    "questionId": 1010,
                    "name": "This pattern is primarily used to reduce the number of objects created and to decrease memory footprint and increase performance ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		}
    ]
}