{
    "id": 1,
    "name": "Data Structure and Algorithms Quiz 5",
    "description": "Data Structure and Algorithms Quiz 5",
    "questions": [
        {
            "id": 1010,
            "name": " Re-balancing of AVL tree costs",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1055,
                    "questionId": 1010,
                    "name": "Ο(1) ",
                    "isAnswer": false
                },
                {
                    "id": 1056,
                    "questionId": 1010,
                    "name": " Ο(log n)",
                    "isAnswer": true
                },
                {
                    "id": 1057,
                    "questionId": 1010,
                    "name": " Ο(n)",
                    "isAnswer":false
                },
                {
                    "id": 1058,
                    "questionId": 1010,
                    "name": " Ο(n2) ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1011,
            "name": " The worst case complexity of binary search matches with",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1059,
                    "questionId": 1010,
                    "name": " interpolation search ",
                    "isAnswer": false
                },
                {
                    "id": 1060,
                    "questionId": 1010,
                    "name": "  linear search ",
                    "isAnswer": true
                },
                {
                    "id": 1061,
                    "questionId": 1010,
                    "name": "  merge sort ",
                    "isAnswer": false
                },
                {
                    "id": 1062,
                    "questionId": 1010,
                    "name": " none of the above",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
        {
            "id": 1012,
            "name": "  After each iteration in bubble sort",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1063,
                    "questionId": 1010,
                    "name": "at least one element is at its sorted position",
                    "isAnswer": true
                },
                {
                    "id": 1064,
                    "questionId": 1010,
                    "name": "one less comparison is made in the next iteration",
                    "isAnswer": false
                },
                {
                    "id": 1065,
                    "questionId": 1010,
                    "name": " Both A & B are true",
                    "isAnswer": false
                },
                {
                    "id": 1066,
                    "questionId": 1010,
                    "name": "Neither A or B are true",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
        },
		{
			"id": 1013,
            "name": " A queue data-structure can be used for",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1067,
                    "questionId": 1010,
                    "name": "expression parsing",
                    "isAnswer": false
                },
                {
                    "id": 1068,
                    "questionId": 1010,
                    "name": "recursion",
                    "isAnswer": false
                },
                {
                    "id": 1069,
                    "questionId": 1010,
                    "name": "resource allocation",
                    "isAnswer": true
                },
                {
                    "id": 1070,
                    "questionId": 1010,
                    "name": "all of the above ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1014,
            "name": "Which of the following algorithm cannot be desiged without recursion ",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1071,
                    "questionId": 1010,
                    "name": "Tower of Hanoi",
                    "isAnswer": false
                },
                {
                    "id": 1072,
                    "questionId": 1010,
                    "name": "Fibonacci Series",
                    "isAnswer": false
                },
                {
                    "id": 1073,
                    "questionId": 1010,
                    "name": "Tree Traversal",
                    "isAnswer": false
                },
                {
                    "id": 1074,
                    "questionId": 1010,
                    "name": "None of the above ",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1015,
            "name": "  Which of the following usees FIFO method",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1075,
                    "questionId": 1010,
                    "name": " Queue ",
                    "isAnswer": true
                },
                {
                    "id": 1076,
                    "questionId": 1010,
                    "name": "Stack",
                    "isAnswer": false
                },
                {
                    "id": 1077,
                    "questionId": 1010,
                    "name": "Hash Table",
                    "isAnswer": false
                },
                {
                    "id": 1078,
                    "questionId": 1010,
                    "name": "Binary Search Tree",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1016,
            "name": "Quick sort algorithm is an example of",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1079,
                    "questionId": 1010,
                    "name": "Greedy approach",
                    "isAnswer": false
                },
                {
                    "id": 1080,
                    "questionId": 1010,
                    "name": "Improved binary search",
                    "isAnswer": false
                },
                {
                    "id": 1081,
                    "questionId": 1010,
                    "name": "Dynamic Programming   ",
                    "isAnswer": false
                },
                {
                    "id": 1082,
                    "questionId": 1010,
                    "name": "Divide and conquer",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1017,
            "name": " Maximum degree of any vertex in a simple graph of vertices n is",
			"explanation": "no explanation ",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1083,
                    "questionId": 1010,
                    "name": " 2n - 1",
                    "isAnswer": false
                },
                {
                    "id": 1084,
                    "questionId": 1010,
                    "name": "n ",
                    "isAnswer": false
                },
                {
                    "id": 1085,
                    "questionId": 1010,
                    "name": "n + 1",
                    "isAnswer": false
                },
                {
                    "id": 1086,
                    "questionId": 1010,
                    "name": "n - 1",
                    "isAnswer": true
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1018,
            "name": "  Which one of the below is not divide and conquer approach?",
			"explanation": " no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1087,
                    "questionId": 1010,
                    "name": "Insertion Sort",
                    "isAnswer": false
                },
                {
                    "id": 1088,
                    "questionId": 1010,
                    "name": "Merge Sort",
                    "isAnswer": true
                },
                {
                    "id": 1089,
                    "questionId": 1010,
                    "name": "Shell Sort",
                    "isAnswer": false
                },
                {
                    "id": 1090,
                    "questionId": 1010,
                    "name": "Heap Sort ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		},
		{
			"id": 1019,
            "name": " The following formula will produce <br/> Fn = Fn-1 + Fn-2  ",
			"explanation": "no explanation",
            "questionTypeId": 1,
            "options": [
                {
                    "id": 1091,
                    "questionId": 1010,
                    "name": "Armstrong Number ",
                    "isAnswer": false
                },
                {
                    "id": 1092,
                    "questionId": 1010,
                    "name": "Fibonacci Series ",
                    "isAnswer": true
                },
                {
                    "id": 1093,
                    "questionId": 1010,
                    "name": "Euler Number",
                    "isAnswer": false
                },
                {
                    "id": 1094,
                    "questionId": 1010,
                    "name": "Prime Number ",
                    "isAnswer": false
                }
            ],
            "questionType": {
                "id": 1,
                "name": "Multiple Choice",
                "isActive": true
            }
		}
    ]
}